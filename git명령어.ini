        git명령어 

1. git사용자 등록 & 상태보기
 - git config --global user.name "Name"
 - git config --global user.emal "email@email.com"
 - git config --global  //설정 내용 확인
 - git status  -> 상태보기

2. Remote 저장소의 프로젝트 가져오기
 - git remote -v    //현재 프로젝트에 등록된 리모트 저장소의 확인
 - git clone [URL] or git remote add origin [URL]

3. clone과 merge
 - fetch 명령은 리모트 저장소의 데이터를 로컬로 가져오지만, 자동으로 
   merge하지는 않는다.
 - 반면 git pull은 저장소에서 데이터를 가져오고 로컬 브랜치와 머지시킨다.
 - 따라서 git clone [URL] -> git pull 해줘야 함.
 - 기능 구현이 끝난 branch는 master로 merge해준다
    git merge [branch]

4. push하기
 - 로컬에 commit한 파일들을 리모트 저장소에 업로드 하기전 리모트 저장소의
   내용을 동기화 하여야 한다.
 - git add [변경파일]
 - git commit -m '주석'
 - git fecth origin master -> (리모트 저장소 별명) (리모트 브랜치)
 - git pull origin master -> (리모트 저장소 별명) (리모트 브랜치)
 - git push origin master

5. 브랜치
 - git branch coffee -> 새로운 브랜치 생성
 - git push orogin coffee -> 새로운 브랜치가 원격에 생성된다.
 - git checkout master -> (원하는 브랜치) : 원하는 브랜치로 이동
 - git branch -d coffee -> 브랜치 삭제
 - git branch -> 브랜치 보기 (-r 리모트 브랜치보기
                              -l 로컬 브랜치 보기
                              -a 로컬, 리모트 브랜치 보기)

6. 태그
 - Annotated 태그 : 만든사람 이름, 이메일, 날짜등을 저장
 - Lightweight 태그 : 브랜치와 비슷하면 특정 커밋에 대한 포인터이다.
 - Annotated 태그 생성
    git tag -a v1.4 -m 'my version 1.4'
    git tag -> 태그조회
    git show v1.4
 - Lightweight 태그 생성
    git tag v1.4-lw
    git tag
    git show v1.4-lw -> 단순 커밋 정보만 보여준다.
